name: mkvlrn-teste-dm-e2e

services:
  mongodb:
    container_name: mongodb
    image: bitnami/mongodb
    ports:
      - 27017:27017
    environment:
      MONGODB_ADVERTISED_HOSTNAME: "127.0.0.1"
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_REPLICA_SET_KEY: replicasetkey
      MONGODB_ROOT_USER: root
      MONGODB_ROOT_PASSWORD: root
    volumes:
      - mongodb-data:/bitnami/mongodb

  redis:
    container_name: redis
    image: redis:alpine
    command: >
      --requirepass ""
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data

  backend:
    depends_on:
      - mongodb
      - redis
    container_name: backend
    image: mkvlrn/teste-dm-backend
    build:
      context: .
      dockerfile: .backend.Dockerfile
    environment:
      - port=4000
      - icdApiClientId=11b1eb5e-eaa5-49e2-953c-e1e17215d679_8a1907bc-03f1-4edb-8dbf-2957d18bca4c
      - icdApiClientSecret=lZU3BoZyiYQjFYIw8zDHuJY6pUg4A68W1oOHXDYYpu0=
      - betterAuthSecret=secret
      - betterAuthUrl=http://localhost:4000
      - betterAuthSessionDuration=14400
      - betterAuthSessionUpdateAge=1200
      - betterAuthCookiePrefix=mkvlrn-teste-dm
      - mongodbUrl=mongodb://root:root@mongodb:27017/teste-dm?authSource=admin&directConnection=true&connectTimeoutMS=5000&serverSelectionTimeoutMS=5000
      - redisUrl=redis://redis:6379

  frontend:
    depends_on:
      - backend
    image: mkvlrn/teste-dm-frontend
    build:
      context: .
      dockerfile: .frontend.Dockerfile

  proxy:
    depends_on:
      - frontend
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./nginx-proxy.conf:/etc/nginx/conf.d/default.conf:ro

  e2e:
    depends_on:
      - proxy
    image: mkvlrn/test-dm-e2e
    build:
      context: .
      dockerfile: .e2e.Dockerfile
    volumes:
      - ./e2e/tests:/tests/src
      - ./e2e/test-results:/tests/test-results
      - ./e2e/playwright.config.ts:/tests/playwright.config.ts

volumes:
  mongodb-data:
  redis-data:
